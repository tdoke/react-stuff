1] Conceptually, components are like pure JavaScript functions. 
They accept arbitrary inputs (called “props”) and return React elements 
describing what should appear on the screen.

what is component its a pure function (props) => react element

two types:
functional components: they are pure js functions
class based components: they are es6 classes,having one more extra feature, i.e state

composing components: check User.js and Address.js

prefer functional components: no state, pure functions, cleaner

Props are Read-Only
Whether you declare a component as a function or a class, it must never modify its own props. Consider this sum function:

function sum(a, b) {
  return a + b;
}
Such functions are called “pure” because they do not attempt to change their inputs, and always return the same result for the same inputs.

In contrast, this function is impure because it changes its own input:

function withdraw(account, amount) {
  account.total -= amount;
}
React is pretty flexible but it has a single strict rule:

All React components must act like pure functions with respect to their props.


